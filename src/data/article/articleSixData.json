{

  "title": "Ubuntu 20.04 - Manage Nginx 1.18",
  "slug": "article/ubuntu-20-04-manage-nginx-1-18",
  "categories": [
    {
      "id": "3",
      "label": "Tutorial"
    }
  ],
  "lang": "en",
  "author": "FRY",
  "imageUrl": "/article/ubuntu-20-04-manage-nginx-1-18/mn118-x5w-20241011131316.png",
  "publishedAt": "2024-1-22",
  "updatedAt": "2024-1-22",
  "headline": "This article exists, to help manage Nginx in Ubuntu",
  "description": "<p>    <strong>Installation Step by Step :</strong></p><p>    <br></p><p>install required package</p><pre spellcheck=\"false\">sudo apt update</pre><p>install required package</p><pre spellcheck=\"false\">sudo apt install nginx</pre><p>    <strong>Service check :</strong></p><p>check status service</p><pre spellcheck=\"false\">sudo systemctl status nginx</pre><p>restart service</p><pre spellcheck=\"false\">sudo systemctl restart nginx</pre><p>start service</p><pre spellcheck=\"false\">sudo systemctl start nginx</pre><p>stop service</p><pre spellcheck=\"false\">sudo systemctl stop nginx</pre><p>    <br></p><p>    <strong>Adjust Firewall :</strong></p><p>    <br></p><p>check status firewall</p><pre spellcheck=\"false\">sudo ufw status</pre><p>check list firewall</p><pre spellcheck=\"false\">sudo ufw app list</pre><p>Enable firewall</p><pre spellcheck=\"false\">sudo ufw enable</pre><p>Disable firewall</p><pre spellcheck=\"false\">sudo ufw disable</pre><p>Allow protocol port when firewall active</p><p>As demonstrated by the output, there are three profiles available for Nginx:</p><ul>    <li>Nginx Full: This profile opens both port 80 (normal, unencrypted web traffic) and port 443 (TLS/SSL encrypted traffic)</li>    <li>Nginx HTTP: This profile opens only port 80 (normal, unencrypted web traffic)</li>    <li>Nginx HTTPS: This profile opens only port 443 (TLS/SSL encrypted traffic)</li></ul><pre spellcheck=\"false\">sudo ufw allow 'Nginx HTTP'</pre><p>    <br></p><p>    <strong>Deploy multiple website</strong>(Tested on Golang Gin, Python FastAPI that running on Docker) :</p><p>    <br></p><p>create configuration on website</p><pre spellcheck=\"false\">sudo nano /etc/nginx/sites-available/{create-domain.conf}</pre><p>copy this code</p><pre spellcheck=\"false\"># comment server syntax this if server there not running on https (from listen 80 to return 301) \n server { \n &nbsp; &nbsp; listen 80; \n &nbsp; &nbsp; server_name {create-domain}; # server name (give the valid domain) \n &nbsp; &nbsp; return 301 https://$host$request_uri;   \n } \n server { \n &nbsp; &nbsp; # listen 80; # uncomment this if server not running on http \n &nbsp; &nbsp; # listen [::]:80; # uncomment this if server not running on http \n &nbsp; &nbsp; listen 443 ssl; # to ssl (comment this if server not running on https)  \n &nbsp; &nbsp; server_name {create-domain}; # give the valid domain or comment this to running from ip and port \n &nbsp; &nbsp; ssl_certificate /etc/letsencrypt/live/{create-domain}/fullchain.pem; # comment this if there no cert ssl \n &nbsp; &nbsp; ssl_certificate_key /etc/letsencrypt/live/{create-domain}/privkey.pem; # comment this if there no cert ssl \n \n &nbsp; &nbsp; location / { \n &nbsp; &nbsp; &nbsp; &nbsp; proxy_pass http://localhost:{port}; # change this port with valid port \n   &nbsp; &nbsp; &nbsp; proxy_set_header Host $host; \n &nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header X-Real-IP $remote_addr; \n &nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \n &nbsp; &nbsp; &nbsp; &nbsp; proxy_set_header    X-Forwarded-Proto $scheme;  \n &nbsp; &nbsp; } \n }</pre><p>Activate symbioc</p><pre spellcheck=\"false\">sudo ln -s /etc/nginx/sites-available/{create-domain.conf} /etc/nginx/sites-enabled/</pre><p>Remove symbioc</p><pre spellcheck=\"false\">sudo rm /etc/nginx/sites-enabled/{create-domain.conf}</pre><p>Check configuration</p><pre spellcheck=\"false\">sudo nginx -t</pre><p>Restart service</p><pre spellcheck=\"false\">sudo systemctl restart nginx</pre><p>    <br></p><p>    <strong>Free Encrypt</strong></p><p>    <br></p><p>install required package</p><pre spellcheck=\"false\">sudo apt update</pre><p>install required package</p><pre spellcheck=\"false\">sudo apt install certbot</pre><p>stop nginx service</p><pre spellcheck=\"false\">sudo systemctl stop nginx</pre><p>add certificate for specific domain url</p><pre spellcheck=\"false\">sudo certbot certonly --standalone -d {create-domain}</pre><p>certificate location</p><pre spellcheck=\"false\">cd /etc/letsencrypt/live/{create-domain}/</pre><p>automatic schedule renew certificate by cron job</p><pre spellcheck=\"false\">sudo crontab -e</pre><p>put this code</p><pre spellcheck=\"false\">30 2 * * 1 /usr/bin/certbot renew --quiet</pre><p>This will run Certbot every Monday at 2:30 AM and automatically renew the certificates if they are close to expiration.</p><p>    <br></p><p>    <br></p> "
}


